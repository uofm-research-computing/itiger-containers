Bootstrap: docker
From: nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04

%post
    export DEBIAN_FRONTEND=noninteractive
    apt-get update 
    apt-get upgrade -y 
    apt-get install -y git build-essential python3 python3-pip gcc wget ocl-icd-opencl-dev opencl-headers clinfo libclblast-dev libopenblas-dev  python3-venv python3-dev
    apt-get install -y r-base r-base-dev libssl-dev libfontconfig1-dev libcurl4-openssl-dev libxml2-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev
    mkdir -p /etc/OpenCL/vendors 
    echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd
    python3 -m pip install --upgrade pip pytest cmake scikit-build setuptools fastapi uvicorn sse-starlette pydantic-settings starlette-context
    CMAKE_ARGS="-DGGML_CUDA=on" pip install llama-cpp-python
    R --slave -e 'install.packages("testthat",repos="https://mirrors.nics.utk.edu/cran/")'
    R --slave -e 'install.packages("pkgload",repos="https://mirrors.nics.utk.edu/cran/")'
    R --slave -e 'install.packages("devtools",repos="https://mirrors.nics.utk.edu/cran/")'
    R --slave -e 'install.packages("torch",repos="https://mirrors.nics.utk.edu/cran/"); library(torch); install_torch()'
    python3 -m pip install tensorflow[and-cuda]
    R --slave -e 'install.packages("tensorflow",repos="https://mirrors.nics.utk.edu/cran/");'
    R --slave -e 'install.packages("GPUmatrix",repos="https://mirrors.nics.utk.edu/cran/")'

%environment
    export LC_ALL=C
    export PATH=/usr/games:$PATH
    export CUDA_DOCKER_ARCH=all
    export GGML_CUDA=1

%runscript
    R CMD BATCH gpuTest.R
